{"version":3,"sources":["layouts/Input.js","layouts/Info.js","layouts/Form.js","App.js","index.js"],"names":["Input","data","change","click","option","map","item","stacja","city","value","className","htmlFor","onChange","list","id","name","onClick","Info","choosenCity","infoListElements","cisnienie","suma_opadu","temperatura","wilgotnosc_wzgledna","data_pomiaru","godzina_pomiaru","element","Form","useState","setCity","dataAPI","setDataAPI","selectedCity","setSelectedCity","useEffect","fetch","then","res","ok","Error","status","json","catch","error","console","log","e","preventDefault","x","filter","document","getElementById","cityInput","target","App","input","containeNumbers","i","length","isNaN","parseInt","mainFunction","ReactDOM","render","StrictMode"],"mappings":"2JAoBeA,MApBf,YAAyC,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MAExBC,EADYH,EAAKI,KAAI,SAACC,GAAD,OAAUA,EAAKC,UACjBF,KAAI,SAACG,GAAD,OAAU,wBAAQC,MAAOD,GAAWA,MAEjE,OACC,sBAAKE,UAAU,QAAf,UACC,uBAAOC,QAAQ,aAAf,8BACA,uBACCC,SAAUV,EACVW,KAAK,YACLC,GAAG,aACHC,KAAK,eAGN,0BAAUD,GAAG,YAAb,SAA0BV,IAC1B,wBAAQY,QAASb,EAAjB,0BCYYc,MA3Bf,YAAgC,IAAhBC,EAAe,EAAfA,YASTC,EARW,CAChB,CAAC,iBAAa,MAAOD,EAAYE,WACjC,CAAC,iBAAe,KAAMF,EAAYG,YAClC,CAAC,cAAe,QAAMH,EAAYI,aAClC,CAAC,aAAc,IAAKJ,EAAYK,qBAChC,CAAC,eAAgB,GAAIL,EAAYM,cACjC,CAAC,kBAAmB,GAApB,UAA2BN,EAAYO,gBAAvC,SAEiCpB,KAAI,SAACqB,GAAD,OACrC,+BACC,uBAAMhB,UAAU,kBAAhB,UAAmCgB,EAAQ,GAA3C,SACA,uBAAMhB,UAAU,kBAAhB,UACEgB,EAAQ,GADV,IACeA,EAAQ,QAHfA,EAAQ,OAOlB,OACC,sBAAKhB,UAAU,YAAf,UACC,kDACiB,+BAAOQ,EAAYX,YAEpC,6BAAKY,QC0BOQ,MA1Cf,WACC,MAAwBC,mBAAS,IAAjC,mBAAOpB,EAAP,KAAaqB,EAAb,KACA,EAA8BD,mBAAS,IAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAwCH,mBAAS,IAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KA8BA,OAfAC,qBAAU,WACTC,MArBU,gDAsBRC,MAAK,SAACC,GACN,GAAIA,EAAIC,GACP,OAAOD,EAER,MAAME,MAAMF,EAAIG,WAEhBJ,MAAK,SAACC,GAAD,OAASA,EAAII,UAClBL,MAAK,SAACnC,GACN8B,EAAW9B,MAEXyC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC7B,IAGF,uBAAMjC,UAAU,OAAhB,UACC,cAAC,EAAD,CAAOP,MA1BY,SAAC2C,GACrBA,EAAEC,iBACF,IAAIC,EAAIlB,EAAQmB,QAAO,SAAC3C,GAAD,OAAUA,EAAKC,SAAWC,KACjDwC,EAAIA,EAAE,GACNf,EAAgBe,GAEKE,SAASC,eAAe,cAChC1C,MAAQ,IAmBQP,OA9BR,SAAC4C,GACtB,IAAMM,EAAYN,EAAEO,OAAO5C,MAC3BoB,EAAQuB,IA4B4CnD,KAAM6B,IAExDE,EAAe,cAAC,EAAD,CAAMd,YAAac,IAAmB,SCF1CsB,MAlCf,WAsBC,OAFAV,QAAQC,IAlBa,SAACU,GAGrB,IAFA,IAAMC,EAAkB,GAEfC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IAC5BE,MAAMC,SAASL,EAAME,OACzBD,EAAgBD,EAAME,KAAM,GAG9Bb,QAAQC,IAAIW,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IAEvB,OADAb,QAAQC,IAAIW,EAAgBC,MACvBD,EAAgBC,GAOXI,CAnBE,WAsBb,sBAAKnD,UAAU,MAAf,UACC,qBAAKA,UAAU,YACf,sBAAKA,UAAU,eAAf,UACC,oBAAIA,UAAU,cAAd,iCACA,cAAC,EAAD,IACA,oBAAIA,UAAU,YAAd,SA9BH,0ICADoD,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDd,SAASC,eAAe,U","file":"static/js/main.32d85405.chunk.js","sourcesContent":["function Input({ data, change, click }) {\r\n\tconst dataCitys = data.map((item) => item.stacja);\r\n\tconst option = dataCitys.map((city) => <option value={city} key={city} />);\r\n\r\n\treturn (\r\n\t\t<div className='input'>\r\n\t\t\t<label htmlFor='city-input'>Wymierz miasto: </label>\r\n\t\t\t<input\r\n\t\t\t\tonChange={change}\r\n\t\t\t\tlist='city-list'\r\n\t\t\t\tid='city-input'\r\n\t\t\t\tname='city-input'\r\n\t\t\t/>\r\n\r\n\t\t\t<datalist id='city-list'>{option}</datalist>\r\n\t\t\t<button onClick={click}>Wyszukaj</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Input;\r\n","function Info({ choosenCity }) {\r\n\tconst infoList = [\r\n\t\t[\"Ciśnienie\", \"hPa\", choosenCity.cisnienie],\r\n\t\t[\"Suma opadów\", \"mm\", choosenCity.suma_opadu],\r\n\t\t[\"Temperatura\", \"°C\", choosenCity.temperatura],\r\n\t\t[\"Wilgotnosc\", \"%\", choosenCity.wilgotnosc_wzgledna],\r\n\t\t[\"Data pomiaru\", \"\", choosenCity.data_pomiaru],\r\n\t\t[\"Godzina pomiaru\", \"\", `${choosenCity.godzina_pomiaru}:00`],\r\n\t];\r\n\tconst infoListElements = infoList.map((element) => (\r\n\t\t<li key={element[0]}>\r\n\t\t\t<span className='info-list__name'>{element[0]} - </span>\r\n\t\t\t<span className='info-list__info'>\r\n\t\t\t\t{element[2]} {element[1]}\r\n\t\t\t</span>\r\n\t\t</li>\r\n\t));\r\n\treturn (\r\n\t\t<div className='info-list'>\r\n\t\t\t<h2>\r\n\t\t\t\tWybrane miasto: <span>{choosenCity.stacja}</span>\r\n\t\t\t</h2>\r\n\t\t\t<ul>{infoListElements}</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Info;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Input from \"./Input\";\r\nimport Info from \"./Info\";\r\n\r\nconst API = \"https://danepubliczne.imgw.pl/api/data/synop\";\r\n\r\nfunction Form() {\r\n\tconst [city, setCity] = useState(\"\");\r\n\tconst [dataAPI, setDataAPI] = useState([]);\r\n\tconst [selectedCity, setSelectedCity] = useState(\"\");\r\n\r\n\tconst chandleChange = (e) => {\r\n\t\tconst cityInput = e.target.value;\r\n\t\tsetCity(cityInput);\r\n\t};\r\n\tconst chandleClick = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet x = dataAPI.filter((item) => item.stacja === city);\r\n\t\tx = x[0];\r\n\t\tsetSelectedCity(x);\r\n\r\n\t\tconst inputElement = document.getElementById(\"city-input\");\r\n\t\tinputElement.value = \"\";\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tfetch(API)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.ok) {\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t\tthrow Error(res.status);\r\n\t\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetDataAPI(data);\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.log(error));\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<form className='form'>\r\n\t\t\t<Input click={chandleClick} change={chandleChange} data={dataAPI} />\r\n\r\n\t\t\t{selectedCity ? <Info choosenCity={selectedCity} /> : null}\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default Form;\r\n","import Form from \"./layouts/Form\";\r\n\r\n/*link do API https://danepubliczne.imgw.pl/api/data/synop */\r\n/*https://danepubliczne.imgw.pl/apiinfo*/\r\nconst APIInfo =\r\n\t\"Źródłem pochodzenia danych jest Instytut Meteorologii i Gospodarki Wodnej – Państwowy Instytut Badawczy\";\r\n\r\nfunction App() {\r\n\tconst input = \"fawfwa\";\r\n\tconst mainFunction = (input) => {\r\n\t\tconst containeNumbers = {};\r\n\r\n\t\tfor (let i = 0; i < input.length; i++) {\r\n\t\t\tif (!isNaN(parseInt(input[i]))) {\r\n\t\t\t\tcontaineNumbers[input[i]] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(containeNumbers);\r\n\t\tfor (let i = 0; i < 10; i++) {\r\n\t\t\tconsole.log(containeNumbers[i]);\r\n\t\t\tif (!containeNumbers[i]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t};\r\n\tconsole.log(mainFunction(input));\r\n\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t<div className='app__bg'></div>\r\n\t\t\t<div className='app__content'>\r\n\t\t\t\t<h1 className='app__header'>Sprawdz pogodę</h1>\r\n\t\t\t\t<Form />\r\n\t\t\t\t<h4 className='app__info'>{APIInfo}</h4>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/style.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}